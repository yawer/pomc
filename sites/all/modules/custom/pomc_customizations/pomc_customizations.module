<?php
function pomc_customizations_init() {
  if (arg(0) == "user" && arg(1) == "login") {
    drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/pomc_customizations.js");
  }
}
function pomc_customizations_form_alter(&$form, &$form_state, $form_id) {
global $user;


if($form_id=='search_block_form') {
 $form['actions']['#attributes']['class'][] = 'element-invisible';
$form['search_block_form']['#attributes']['placeholder'] = t('Search');
}
if ($form_id == "user_login") {
unset($form['name']['#description']);
unset($form['pass']['#description']);
if(module_exists('ajax_register')){
$enabled_links = variable_get('ajax_register_enabled_links', array('password'));
$login_link= array(
  '#theme' => 'item_list',
  '#items' => _ajax_register_ajax_links($enabled_links),
);
}
$form['name']['#title'] = Null;
$form['pass']['#title'] = Null;
$form['name']['#attributes'] = array('placeholder' => t('Email Address'));
$form['pass']['#attributes'] = array('placeholder' => t('Password'));
//$form['links']['#markup'] = '<div class="request-link pull-right">'.$login_link['#items'][1].'</div>'; 
$form['actions']['submit']['#attributes'] = array('class' => Null);
$form['actions']['submit']['#attributes'] = array('class' => array('btn btn-large btn-primary'));
// Remove Request New Password from Block form
    $form['links']['#weight'] = 540;

}


if ($form_id == "profile2_edit_user_profile_form"){

drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/pomc_customizations.js");
    drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/formToWizard.js");
   drupal_add_js('jQuery(document).ready(function(){jQuery("#profile2-edit-user-profile-form").formToWizard({submitButton:"edit-submit"})});', array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));

}

}

function pomc_customizations_overlay_child_initialize() {
  // Add our custom JavaScript.
drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/pomc_customizations.js");
}

 
 function get_individual_paste($row, $view) {
 
 $output = '';
 $sharedBy = '';
 $title =  $view->style_plugin->rendered_fields[$view->row_index]['title'];
 $image=  $view->style_plugin->rendered_fields[$view->row_index]['field_paste_image'];
 $category =   $view->style_plugin->rendered_fields[$view->row_index]['field_category'];
  $city =   $view->style_plugin->rendered_fields[$view->row_index]['field_city'];
  $commentCount = $view->style_plugin->rendered_fields[$view->row_index]['comment_count'];
  $author = $view->style_plugin->rendered_fields[$view->row_index]['name'];
  if(isset($view->style_plugin->rendered_fields[$view->row_index]['name_1'])) {
  $sharedBy = $view->style_plugin->rendered_fields[$view->row_index]['name_1'];
  }
  $description =  $view->style_plugin->rendered_fields[$view->row_index]['body'];
  $nid=$view->style_plugin->rendered_fields[$view->row_index]['nid'];
  $like = flag_get_flag('like');
  $share = flag_get_flag('share');
  $likelink = flag_create_link('like', $nid);
  $sharelink = flag_create_link('share', $nid);
 $output .= '<div class="column clearfix pull-left"><!--<div class="curl"></div>--><div class="top"></div><div class="mid"><h2 class="title"> '.$title.'</h2><div class="pull-left">by '.$author.'<!-- url = user-name/ --></div><div class="category">in '. $category .'<!-- url = category-name/city-name/ --></div><div>' . $image . '</div><div class="paste-bar clearfix"><div class="pull-left">'.$likelink.' <span id="lightframe"> &bull; </span>'.$sharelink.'</div><div class="pull-right"><span><b class="not-liked"></b> ' . $like->get_count($nid) . ' </span><span> &bull; </span><span><b class="not-shared"></b> '.$share->get_count($nid) .'</span></div></div><p class="desc">'.$description.'</p><div class="info clearfix"><div class="pull-left">'.$commentCount.'</div></div><div class="comment"><textarea class="comment-area" rows="1" placeholder="comment"></textarea><!--<span>shift+enter new line</span>--></div></div><div class="bot"></div></div>';

return $output;
 
 }
 
 function MODULENAME_ds_fields_info($entity_type) {
  // Compile a list of image styles for the profile picture options.
  $picture_formatters = array();
  foreach (image_styles() as $formatter) {
    $picture_formatters['MODULENAME_picture_' . $formatter['name']] = drupal_ucfirst(str_replace('_', ' ', $formatter['name']));
  }

  $fields = array();
  $fields['userlist_picture'] = array(
    'title' => t('Profile picture'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'function' => '_MODULENAME_ds_field_userlist_picture',
    'properties' => array(
      'formatters' => $picture_formatters,
    ),
  );

  return array('user' => $fields);
}

/**
 * Custom field displaying a user's profile picture.
 */
function _pomc_ds_field_userlist_picture($field) {
  if ($profile = profile2_load_by_user($field['entity'])) {
    if ($picture = field_get_items('profile2', $profile['user_profile'], 'field_profile_image')) {
      $picture = reset($picture);
    }

    // Provide a default picture for users that have not yet uploaded one.
    if (!isset($picture['uri']) || empty($picture['uri'])) {
      $picture['uri'] = 'public://profile_pictures/profile_default.png';
      $picture['width'] = 247;
      $picture['height'] = 247;
    }

    // Retrieve the user's first name to use in the alt tag.
    $first_name = field_get_items('profile2', $profile['user_profile'], 'field_name');
    $first_name = !empty($first_name[0]['safe_value']) ? $first_name[0]['safe_value'] : t('User');

    $vars = array(
     // 'style_name' => str_replace('pomc_picture_', '', $field['profile-picture']),
      'path' => $picture['uri'],
      'width' => $picture['width'],
      'height' => $picture['height'],
      'alt' => t('@user\'s picture', array('@user' => $first_name)),
    );

    $image = theme('profile-picture', $vars);

    return l($image, 'user/' . $field['entity']->uid, array('html' => TRUE));
  }
  return FALSE;
}
 
function user_profile_theming($account) {
$output = '';
$profile_picture = $name = $description = '';
 $profile = profile2_load_by_user($account, $type_name = NULL);
 $follow = flag_get_flag('follow_users');
 $numberFollowers = $follow->get_count($account);
 $numberofFollowing = $follow->get_user_count($account);
// dpm($follow);
 $followlink = flag_create_link('follow_users', $account);
 //dpm($profile['user_profile']);
 if(isset($profile['user_profile']) && isset($profile['user_profile']->field_name['und'][0]['value'])) {
$name =$profile['user_profile']->field_name['und'][0]['value'];
}
if(isset($profile['user_profile']) && ($profile['user_profile']->field_profile_image['und'][0]['filename'])) {
$path = $profile['user_profile']->field_profile_image['und'][0]['filename']; 
$profile_picture = theme('image_style', array('style_name' => 'profile-picture', 'path' => $path));
}
if (isset($profile['user_profile']) && ($profile['user_profile']->field_description['und'][0]['value'])) {
$description = $profile['user_profile']->field_description['und'][0]['value'];
}
//print $image = drupal_render(field_view_field('profile2', $profile['user_profile'], 'field_profile_image'));
$editprofileLink = l("Edit Profile", "profile-user_profile/". $account. "/edit");
$output .= '<div class="user-profile clearfix"><div class="user-pic pull-left">'.$profile_picture.'</div><div class="user-desc  pull-left"><h2 class="user-name"> '. $name .'</h2><p class="user-intro">'.$description.'</p>';
if ($followlink) {
$output .= '<div class="follow"><button class="btn btn-danger" >'.$followlink.'</button></div>';
}
$output.='</div><div class="user-stats  pull-left"><div class="follow"><button class="btn" >'.$editprofileLink.'</button></div><div class="single-stat"><span class="stat-no"> 3245</span> pastes</div><div class="single-stat"><span class="stat-no"> '.$numberofFollowing.'</span> following</div><div class="single-stat"><span class="stat-no"> '. $numberFollowers.'</span> followers</div></div></div>';
 return $output;
}
?>
