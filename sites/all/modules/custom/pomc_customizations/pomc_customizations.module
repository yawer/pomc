<?php
function pomc_customizations_init() {
  if (arg(0) == "user" && arg(1) == "login") {
    drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/pomc_customizations.js");
  }
}
function pomc_customizations_form_alter(&$form, &$form_state, $form_id) {
global $user;

/*
function pomc_customizations_user_insert($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'insert':
      $edit['first_time_login'] = 1;
      break;
    case 'login':
      $data = unserialize($account->data);
      if ($data['first_time_login']) {
        user_save($account, array('first_time_login' => 0));
      }
      break;
  }
}*/
if($form['#id'] == 'views-exposed-form-dashboard-page-2') {
if(isset($_GET['category'])) {
$cat_id = $_GET['category'];
$term = taxonomy_term_load($cat_id);
$cat_name = $term->name;
}

if(isset($_GET['city'])){
$city_id =  $_GET['city'];
$term_city = taxonomy_term_load($city_id);
$city_name = $term_city->name;
}

$output = '';
/*Configuring themable output for city*/

if(isset($city_name)) {
$output .= '<div>City: </div><div id="city-label">'.$city_name.'</div>';
}
else {
$output .= '<div>City: </div><div id="city-label">City</div>';
}

$output .= '<ul id = "city-list-options">';
foreach($form['city']['#options'] as $cid => $city) {
 if($city) {
   $output .= '<li class="city-list" id="city city-'.$cid.'" value = "'.$cid.'">'.$city.'</li>'; 
  }
}
$output .= '</ul>';


/* Configuring themable output for category list */
if(isset($cat_name)) {
$output .= '<div>Category: </div><div id="cat-label">'.$cat_name.'</div>';
}
else {
$output .= '<div>Category: </div><div id="cat-label">Everything</div>';
}
$output .= '<ul id = "category-list-options">';

foreach($form['category']['#options'] as $tid => $taxonomy) {
  if($taxonomy) {
    $parent = taxonomy_get_parents($tid);
      if(!$parent) {
      $children = taxonomy_get_children($tid);
      $children_tid = array_keys($children);
      if($children) {
        $output .= get_children_html($children, $taxonomy ,$tid);
      }
      else {
        $output .= '<li class="primary-list" id="primary-category primary-'.$tid.'" value = "'.$tid.'">'.$taxonomy.'</li>'; 
      }
    }

  }

}
$output .= '</ul>';
$form['#suffix'] = $output;

}

if($form_id=='search_block_form') {
 $form['actions']['#attributes']['class'][] = 'element-invisible';
$form['search_block_form']['#attributes']['placeholder'] = t('Search');
}
if ($form_id == "user_login") {
unset($form['name']['#description']);
unset($form['pass']['#description']);
if(module_exists('ajax_register')){
$enabled_links = variable_get('ajax_register_enabled_links', array('password'));
$login_link= array(
  '#theme' => 'item_list',
  '#items' => _ajax_register_ajax_links($enabled_links),
);
}
$form['name']['#title'] = Null;
$form['pass']['#title'] = Null;
$form['name']['#attributes'] = array('placeholder' => t('Email Address'));
$form['pass']['#attributes'] = array('placeholder' => t('Password'));
//$form['links']['#markup'] = '<div class="request-link pull-right">'.$login_link['#items'][1].'</div>'; 
$form['actions']['submit']['#attributes'] = array('class' => Null);
$form['actions']['submit']['#attributes'] = array('class' => array('btn btn-large btn-primary'));
// Remove Request New Password from Block form
    $form['links']['#weight'] = 540;

}

if($form_id=='user_register_form') {
$form['Button_first'] = array(
    '#markup' => '<div class="next_first">Next >></div>',
    '#weight' => 3,
    );
$form['Buttons_second'] = array(
    '#markup' => '<div class="previous_button"><< Previous</div>',
    '#weight' => 30,
    );
dsm($form);
}
if ($form_id == "profile2_edit_user_profile_form"){
/*
drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/pomc_customizations.js");
    drupal_add_js(drupal_get_path("module", "pomc_customizations") . "/js/formToWizard.js");
   drupal_add_js('jQuery(document).ready(function(){jQuery("#profile2-edit-user-profile-form").formToWizard({submitButton:"edit-submit"})});', array('type' => 'inline', 'scope' => 'footer', 'weight' => 5));
*/
}

}

function get_children_html($children, $taxonomy_name, $tid){
$html_list = '<li class="primary-list" id="primary-category primary-'.$tid.'" value = "'.$tid.'">'.$taxonomy_name;
$html_list .='</li><ul id="secondary-category-list" class = "category-child-list-'.$tid.'">';
foreach($children as $ctid => $childrenlist) {
$html_list .='<li class="secondary-list" id="secondary-category childof-'.$tid.' secondary-'.$ctid.'" value ="'.$ctid.'">'.$childrenlist->name.'</li>';
}
$html_list .='</ul>'; 

return $html_list;
}



 
 function get_individual_paste($row, $view) {
 
 $output = '';
 $sharedBy = '';
 $title =  $view->style_plugin->rendered_fields[$view->row_index]['title'];
 $image=  $view->style_plugin->rendered_fields[$view->row_index]['field_paste_image'];
 $category =   $view->style_plugin->rendered_fields[$view->row_index]['field_category'];
  $city =   $view->style_plugin->rendered_fields[$view->row_index]['field_city'];
  $commentCount = $view->style_plugin->rendered_fields[$view->row_index]['comment_count'];
  $author = $view->style_plugin->rendered_fields[$view->row_index]['name'];
  if(isset($view->style_plugin->rendered_fields[$view->row_index]['name_1'])) {
  $sharedBy = $view->style_plugin->rendered_fields[$view->row_index]['name_1'];
  }
  $description =  $view->style_plugin->rendered_fields[$view->row_index]['body'];
  $nid=$view->style_plugin->rendered_fields[$view->row_index]['nid'];
  $like = flag_get_flag('like');
  $share = flag_get_flag('share');
  $likelink = flag_create_link('like', $nid);
  $sharelink = flag_create_link('share', $nid);
  $print_form = drupal_get_form("comment_node_paste_form", (object) array('nid' => $nid));
  hide($print_form['author']);
 $output .= '<div class="column clearfix pull-left"><!--<div class="curl"></div>--><div class="top"></div><div class="mid"><h2 class="title"> '.$title.'</h2><div class="pull-left">by '.$author.'<!-- url = user-name/ --></div><div>' . $image . '</div><p class="desc">'.$description.'</p><div class="paste-bar clearfix"><div class="pull-left">'.$likelink.' <span id="lightframe"> &bull; </span>'.$sharelink.'</div></div><div class="category">in '. $category .'<!-- url = category-name/city-name/ --></div>
<div class="pull-right"><span> ' . $like->get_count($nid) . ' Likes </span><span> &bull; </span><span> '.$share->get_count($nid) .' Shares</span><span> &bull; </span><span class="info clearfix commentcount">' .$commentCount.' <b class="not-comment" ></b></span></div>'. drupal_render($print_form).'</div><div class="bot"></div></div>';
return $output;
 
 }
 /*
function user_profile_theming($account) {
$output = '';
$profile_picture = $name = $description = '';
 $profile = profile2_load_by_user($account, $type_name = NULL);
 $follow = flag_get_flag('follow_users');
 $numberFollowers = $follow->get_count($account);
 $numberofFollowing = $follow->get_user_count($account);
// dpm($follow);
 $followlink = flag_create_link('follow_users', $account);
 //dpm($profile['user_profile']);
 if(isset($profile['user_profile']) && isset($profile['user_profile']->field_name['und'][0]['value'])) {
$name =$profile['user_profile']->field_name['und'][0]['value'];
}
if(isset($profile['user_profile']) && ($profile['user_profile']->field_profile_image['und'][0]['filename'])) {
$path = $profile['user_profile']->field_profile_image['und'][0]['filename']; 
$profile_picture = theme('image_style', array('style_name' => 'profile-picture', 'path' => $path));
}
if (isset($profile['user_profile']) && ($profile['user_profile']->field_description['und'][0]['value'])) {
$description = $profile['user_profile']->field_description['und'][0]['value'];
}
//print $image = drupal_render(field_view_field('profile2', $profile['user_profile'], 'field_profile_image'));
$editprofileLink = l("Edit Profile", "profile-user_profile/". $account. "/edit");
$output .= '<div class="user-profile clearfix"><div class="user-pic pull-left">'.$profile_picture.'</div><div class="user-desc  pull-left"><h2 class="user-name"> '. $name .'</h2><p class="user-intro">'.$description.'</p>';
if ($followlink) {
$output .= '<div class="follow"><button class="btn btn-danger" >'.$followlink.'</button></div>';
}
$output.='</div><div class="user-stats  pull-left"><div class="follow"><button class="btn" >'.$editprofileLink.'</button></div><div class="single-stat"><span class="stat-no"> 3245</span> pastes</div><div class="single-stat"><span class="stat-no"> '.$numberofFollowing.'</span> following</div><div class="single-stat"><span class="stat-no"> '. $numberFollowers.'</span> followers</div></div></div>';
 return $output;
}*/
/** Following will return the total no of paste by a user
*/
function get_node_count_by_user($id_user){
  $result = db_query('SELECT COUNT(*) as count_paste FROM {node} WHERE uid = :uid', array(':uid' => $id_user));
  foreach ($result as $record) {
  return $record->count_paste;
  }
}
function get_like_count($nid) {
  $like = flag_get_flag('like');
  //$share = flag_get_flag('share');
$count = $like->get_count($nid);
//dpm($count);
return $count;
}

function get_share_count($nid) {
  //$like = flag_get_flag('like');
  $share = flag_get_flag('share');
$count = $share->get_count($nid);
return $count;
}

function custom_menu_for_header() {
global $user;

//dpm($user);
$output = '';
$output .= '<ul class="nav nav-pills pull-right">';
$output .= '<li class="active">'.l("Home", "home").'</li>';
$output .= '<li>'.l("Notifications", "notifications").'</li>';
$output .= '<li>'.l("Create Paste", "node/add/paste").'</li>';

$output .= '<li class="dropdown">'.l($user->name, "user/".$user->uid, array("attributes" => array("class" => array("dropdown-toggle")))).'';


$output .= '<ul class="dropdown-menu">';
$output .=' <li>'.l("Inbox", "messages").'</li>';
$output .= '<li>'.l("Followers", "user/".$user->uid."/followers").'</li>';
$output .= '<li>'.l("Following", "user/".$user->uid."/following").'</li>';
$output .= '<li>'.l("Invite Friends", "user/invite-friends").'</li>';
$output .= '<li>'.l("Edit Profile", "user/".$user->uid."/edit").'</li>';
$output .= '<li>'.l("Logout", "user/logout").'</li>';
$output .='</ul></li></ul>';
return $output;                
}

/**
 * 
 *
 */
?>
